/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Iterator : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Iterator(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Iterator obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Iterator() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AkSoundEnginePINVOKE.CSharp_delete_Iterator(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public PlaylistItem pItem {
    set {
      AkSoundEnginePINVOKE.CSharp_Iterator_pItem_set(swigCPtr, PlaylistItem.getCPtr(value));

    } 
    get {
      IntPtr cPtr = AkSoundEnginePINVOKE.CSharp_Iterator_pItem_get(swigCPtr);
      PlaylistItem ret = (cPtr == IntPtr.Zero) ? null : new PlaylistItem(cPtr, false);

      return ret;
    } 
  }

  public Iterator NextIter() {
    Iterator ret = new Iterator(AkSoundEnginePINVOKE.CSharp_Iterator_NextIter(swigCPtr), false);

    return ret;
  }

  public Iterator PrevIter() {
    Iterator ret = new Iterator(AkSoundEnginePINVOKE.CSharp_Iterator_PrevIter(swigCPtr), false);

    return ret;
  }

  public PlaylistItem GetItem() {
    PlaylistItem ret = new PlaylistItem(AkSoundEnginePINVOKE.CSharp_Iterator_GetItem(swigCPtr), false);

    return ret;
  }

  public bool IsEqualTo(Iterator in_rOp) {
    bool ret = AkSoundEnginePINVOKE.CSharp_Iterator_IsEqualTo(swigCPtr, Iterator.getCPtr(in_rOp));

    return ret;
  }

  public bool IsDifferentFrom(Iterator in_rOp) {
    bool ret = AkSoundEnginePINVOKE.CSharp_Iterator_IsDifferentFrom(swigCPtr, Iterator.getCPtr(in_rOp));

    return ret;
  }

  public Iterator() : this(AkSoundEnginePINVOKE.CSharp_new_Iterator(), true) {

  }

}
